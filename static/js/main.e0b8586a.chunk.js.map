{"version":3,"sources":["components/navigation/Navigation.js","pages/FeedbackPage.js","pages/ArticlesPage.js","components/allIssueDisplay/IssueCover.js","pages/ArchivePage.js","App.js","articles/Articles_index.js","articles/article001.js","articles/article002.js","serviceWorker.js","index.js"],"names":["Navigation","to","target","href","React","Component","FeedbackPage","ArticlesPage","props","articles","map","article","index","key","rubric","title","lead","All","undertitle","text","author","cover","App","exact","path","render","component","ArticlePage","articleId","match","params","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iQAGqBA,E,uKAEnB,OACE,6BAGA,kBAAC,IAAD,CAAMC,GAAG,KAAT,0FACA,uBAAGC,OAAO,QAAQC,KAAK,oCAAvB,2DACA,kBAAC,IAAD,CAAMF,GAAG,aAAT,wF,GARoCG,IAAMC,WCAzBC,E,uKAEnB,OACE,iD,GAHsCF,IAAMC,WCiBjCE,MAjBf,SAAsBC,GACpB,IAAMC,EAAWD,EAAMC,SACvB,OACE,6BACGA,EAASC,KAAI,SAACC,EAASC,GAAV,OACZ,yBAAKC,IAAKD,GACR,6BAAMD,EAAQG,QACd,6BAAMH,EAAQI,OACd,6BAAMJ,EAAQK,QACd,kBAAC,IAAD,CAAMf,GAAE,mBAAcW,EAAQ,IAA9B,yFACA,mCCVgBR,IAAMC,UCWjBY,ICATR,ECVS,CCFE,CACbK,OAAQ,6CACRC,MAAO,yGACPG,WAAY,6EACZF,KAAM,WACJ,OACF,6BACA,2BAAG,05BAIHG,KAAM,WACJ,OACE,6BACE,6BACE,2BAAG,+qDACH,2BAAG,mzDACH,2BAAG,25BAIXC,OAAQ,uCACRC,MAAO,OCtBM,CACbP,OAAQ,6CACRC,MAAO,yGACPG,WAAY,6EACZF,KAAM,WACJ,OACF,6BACA,2BAAG,05BAIHG,KAAM,WACJ,OACE,6BACE,2BAAG,+qDACH,2BAAG,mzDACH,2BAAG,05BAGTC,OAAQ,uCACRC,MAAO,QHmBIC,E,uKAlBX,OACE,6BAEE,kBAAC,IAAD,KAEE,kBAAC,EAAD,MAGA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAU,kBAAK,kBAAC,EAAD,CAAchB,SAAYA,OAC/D,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,sBAAsBE,UAAWC,IACnD,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,YAAYE,UAAWpB,U,GAbjCF,IAAMC,WA+BxB,SAASsB,EAAT,GAA+B,IACZC,EADW,EAARC,MACbC,OAAUF,UACjB,OACE,6BACI,6BAAMnB,EAASmB,EAAY,GAAGd,QAC9B,6BAAML,EAASmB,EAAY,GAAGb,OAC9B,6BAAMN,EAASmB,EAAY,GAAGZ,QAC9B,6BAAMP,EAASmB,EAAY,GAAGT,QAC9B,6BAAMV,EAASmB,EAAY,GAAGR,SI/ClBW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASL,MACvB,2DCZNM,IAASV,OACP,kBAAC,IAAMW,WAAP,KAEE,kBAAC,EAAD,OAGFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e0b8586a.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default class Navigation extends React.Component {\nrender(){\n  return(\n    <div>\n\n\n    <Link to=\"/\">Читайте в номере</Link>\n    <a target=\"_self\" href=\"https://roslava.github.io/index/\">Все номера</a>\n    <Link to=\"/feedback\">Обратная связь</Link>\n    </div>\n  )\n}\n}\n","import React from 'react';\n\n\nexport default class FeedbackPage extends React.Component {\nrender(){\n  return(\n    <h3>Feedback Page</h3>\n  )\n}\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction ArticlesPage(props){\n  const articles = props.articles;\n  return (\n    <div>\n      {articles.map((article, index) => (\n        <div key={index}>\n          <div>{article.rubric}</div>\n          <div>{article.title}</div>\n          <div>{article.lead()}</div>\n          <Link to={`/article/${index + 1}`}>Читать полность</Link>\n          <hr/>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ArticlesPage\n","import React from 'react';\n\n\nclass MyComponent extends React.Component {\n  render() {\n    const {data} = this.props;\n    const nameList = data.map(issue => {\n      return(\n        <div key={issue.key}>\n        <div>№ {issue.issue_number} ({issue.overal_number}), {issue.month} {issue.year}</div>\n        <div>{issue.id}</div>\n        <hr/>\n        </div>\n      )\n    });\n\n    return(\n      <div>{nameList}</div>\n    )\n  }\n}\n\nexport default MyComponent;\n","import React from 'react';\nimport IssueCover from '../components/allIssueDisplay/IssueCover';\nimport Data from '../components/allIssueDisplay/issueData';\n\n\nfunction All() {\n  return (\n    <div>\n      <h1>Все выпуски</h1>\n      <IssueCover data = {Data} />\n    </div>\n  );\n}\n\nexport default All;\n","import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport {BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navigation from './components/navigation/Navigation'\nimport FeedbackPage from './pages/FeedbackPage'\nimport ArticlesPage from './pages/ArticlesPage'\nimport ArchivePage from './pages/ArchivePage'\n\n\n/*Подключение массива с базой статей из файла ArticlesIndex.js */\nimport ArticlesIndex from './articles/Articles_index';\n\n/*Помещаем массив с базой статей в константу articles */\nconst articles = ArticlesIndex;\n\n\n\n\n\nclass App extends React.Component {\n\n  render(){\n    return(\n      <div>\n\n        <Router>\n\n          <Navigation />\n\n\n          <Route exact path=\"/\" render = {()=> <ArticlesPage articles = {articles}/>} />\n          <Route exact path=\"/article/:articleId\" component={ArticlePage} />\n          <Route exact path=\"/feedback\" component={FeedbackPage} />\n\n      </Router>\n\n      </div>\n    );\n  }\n}\nexport default App\n\n\n\n\n\n\n\n\n/*Не выходит вынести в отдельный компонент!!!*/\nfunction ArticlePage({match}) {\n  const {params: { articleId }} = match;\n  return (\n    <div>\n        <div>{articles[articleId - 1].rubric}</div>\n        <div>{articles[articleId - 1].title}</div>\n        <div>{articles[articleId - 1].lead()}</div>\n        <div>{articles[articleId - 1].text()}</div>\n        <div>{articles[articleId - 1].author}</div>\n    </div>\n  );\n};\n","\nimport article001 from './article001';\nimport article002 from './article002';\n\nlet indexAll = [article001, article002];\n\n\nexport default indexAll;\n","import React from 'react';\n\n  export default {\n    rubric: \"Рубрика\",\n    title: \"Заголовок статьи article001\",\n    undertitle: \"Подзаголовок_1\",\n    lead: function(){\n      return(\n    <div>\n    <p><span>По итогам состязаний восемь спортсменов вошли в&#160;состав сборной России. Она будет представлять страну на&#160;чемпионате Европы, который пройдет в&#160;Москве в&#160;ноябре этого года.</span></p>\n    </div>\n      )\n    },\n    text: function(){\n      return(\n        <div>\n          <div>\n            <p><span>По словам директора клуба «Сетокан трансгаз Ставрополь», заслуженного тренера России по&#160;восточному боевому единоборству сетокан Виктора Мащенко, 19 медалей&#160;— это хороший результат. Тем более если учитывать, что два ведущих бойца клуба Даниил Мащенко и&#160;Анатолий Анашкин из-за травм вынуждены были пропустить соревнования. </span></p>\n            <p><span>— Отдельно хочу отметить Владислава Чернова, который выиграл «золото» в&#160;личном и&#160;командном кумите. Это один из ярких представителей нашей молодежи. В категории «16-17» лет наши ребята заняли весь пьедестал почета. Эта самая перспективная категория, уже через год-два спортсмены составят костяк национальной сборной страны,&#160;— подчеркнул Виктор Мащенко. </span></p>\n            <p><span>По итогам состязаний восемь спортсменов вошли в&#160;состав сборной России. Она будет представлять страну на&#160;чемпионате Европы, который пройдет в&#160;Москве в&#160;ноябре этого года.</span></p></div>\n        </div>\n      )\n    },\n    author: \"Иванов\",\n    cover: \"img\",\n  }\n","import React from 'react';\n\n  export default {\n    rubric: \"Рубрика\",\n    title: \"Заголовок статьи article002\",\n    undertitle: \"Подзаголовок_2\",\n    lead: function(){\n      return(\n    <div>\n    <p><span>По итогам состязаний восемь спортсменов вошли в&#160;состав сборной России. Она будет представлять страну на&#160;чемпионате Европы, который пройдет в&#160;Москве в&#160;ноябре этого года.</span></p>\n    </div>\n      )\n    },\n    text: function(){\n      return(\n        <div>\n          <p><span>По словам директора клуба «Сетокан трансгаз Ставрополь», заслуженного тренера России по&#160;восточному боевому единоборству сетокан Виктора Мащенко, 19 медалей&#160;— это хороший результат. Тем более если учитывать, что два ведущих бойца клуба Даниил Мащенко и&#160;Анатолий Анашкин из-за травм вынуждены были пропустить соревнования. </span></p>\n          <p><span>— Отдельно хочу отметить Владислава Чернова, который выиграл «золото» в&#160;личном и&#160;командном кумите. Это один из ярких представителей нашей молодежи. В категории «16-17» лет наши ребята заняли весь пьедестал почета. Эта самая перспективная категория, уже через год-два спортсмены составят костяк национальной сборной страны,&#160;— подчеркнул Виктор Мащенко. </span></p>\n          <p><span>По итогам состязаний восемь спортсменов вошли в&#160;состав сборной России. Она будет представлять страну на&#160;чемпионате Европы, который пройдет в&#160;Москве в&#160;ноябре этого года.</span></p></div>\n      )\n    },\n    author: \"Иванов\",\n    cover: \"img\",\n  }\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}